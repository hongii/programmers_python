def solution(n):
    res = ""
    while n:
        idx = n%3
        n //= 3
        res += "412"[idx]
        if idx == 0:
            n -= 1

    return res[::-1]

'''
# 124 나라의 숫자 풀이 -> 3진법과 유사한 풀이(n //= 3 반복, n%3으로 숫자 구하기). but, 주의해야할 부분 존재!!(이거떄매 한참 헤맴..)
124 나라에서는 1,2,4 의 숫자만 가능하므로, 3진법과 똑같이 풀이하면 틀린다.
3진법에서는 0,1,2 의 숫자를 사용하여 표현하기 때문에 나머지가 0인 경우 3진법과 124나라의 숫자 표현이 달라지게 된다.
나머지가 1인 경우 -> 3진법: 1     124나라: 1
나머지가 2인 경우 -> 3진법: 2     124나라: 2
나머지가 0인 경우 -> 3진법: 0     124나라: 4
따라서, 124 나라에는 나머지가 0 일때는 몫을 -1 해주어 나머지를 4로 만들어 주어야 한다.
(124나라는 1,2,4 이 숫자 3개가 반복되는 나라이므로 3으로 나눠준 후 나머지가 0인 경우는 숫자 4를 의미한다.)

내가 짠 코드에서는 나머지를 4로 만들어 주는건 편의상 생략하고, 
대신에 나머지 값을 index값으로 매치해서 나머지가 0인 경우에는 0번째 값인 4가 오도록 구현하였고(124 가 아닌 412로 배치) 
이때 n//3을 통해 구한 몫에서 1을 꼭 뻬주어야 한다. 
여기서 저장되는 res값을 뒤집어준 값이 124 나라의 숫자로 변환한 값이 된다.
'''